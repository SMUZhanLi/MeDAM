% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/id-mapping.R
\name{disease2doid}
\alias{disease2doid}
\title{disease2doid}
\usage{
disease2doid(medam, disease, fixed = TRUE)
}
\arguments{
\item{medam}{A Pool object connected MeDAM.db.}

\item{disease}{Aliases of disease(ignored case), e.g. "pre-eclampsia".}

\item{fixed}{If TRUE match "disease" exactly, otherwise use \code{str_like()}
to query disease fuzzy faintly. See details.}
}
\value{
A tibble contained DOID, name and superclass of query disease.
}
\description{
Convert aliases of disease to Diease Ontology id (DOID).
}
\details{
Fuzzy matching follows the conventions of the SQL LIKE operator:
\itemize{
\item Must match the entire string.
\item \code{⁠_}⁠ matches a single character (like \code{.}).
\item \code{⁠\%}⁠ matches any number of characters (like \code{⁠.*}⁠).
\item \code{⁠\%}⁠ and \code{⁠\_}⁠ match literal \code{⁠\%}⁠ and \code{⁠_}⁠.
\item The match is case insensitive by default.
}
}
\examples{
\dontrun{
# remotes::install_github("rstudio/pool")
library(pool)

medamdb <- dbPool(drv = RSQLite::SQLite(), dbname = "MeDAM.db")
disease2doid(medamdb, "pre-eclampsia")
## fuzzy matching
disease2doid(medamdb, "\%eclampsia", fixed = FALSE)
poolClose(medamdb)
}
}
\seealso{
\code{\link[stringr]{str_like}}
}
